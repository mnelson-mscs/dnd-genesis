// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dndgenesis.Data;

#nullable disable

namespace dndgenesis.Migrations
{
    [DbContext(typeof(dndgenesisContext))]
    [Migration("20220323112525_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("dndgenesis.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublishDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("dndgenesis.Models.DndClass", b =>
                {
                    b.Property<int>("DndClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DndClassId"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DndClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitDice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DndClassId");

                    b.HasIndex("BookId");

                    b.ToTable("DndClass");
                });

            modelBuilder.Entity("dndgenesis.Models.DndSubclass", b =>
                {
                    b.Property<int>("DndSubclassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DndSubclassId"), 1L, 1);

                    b.Property<int>("DndClassId")
                        .HasColumnType("int");

                    b.Property<string>("DndSubclassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DndSubclassId");

                    b.HasIndex("DndClassId");

                    b.ToTable("DndSubclass");
                });

            modelBuilder.Entity("dndgenesis.Models.Race", b =>
                {
                    b.Property<int>("RaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaceId"), 1L, 1);

                    b.Property<string>("RaceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RaceId");

                    b.ToTable("Race");
                });

            modelBuilder.Entity("dndgenesis.Models.SchoolMagic", b =>
                {
                    b.Property<int>("SchoolMagicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchoolMagicId"), 1L, 1);

                    b.Property<string>("SchoolMagicName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SchoolMagicId");

                    b.ToTable("SchoolMagic");
                });

            modelBuilder.Entity("dndgenesis.Models.Spell", b =>
                {
                    b.Property<int>("SpellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpellId"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("SchoolMagicId")
                        .HasColumnType("int");

                    b.Property<string>("SpellName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpellId");

                    b.HasIndex("BookId");

                    b.HasIndex("SchoolMagicId");

                    b.ToTable("Spell");
                });

            modelBuilder.Entity("dndgenesis.Models.Subrace", b =>
                {
                    b.Property<int>("SubraceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubraceId"), 1L, 1);

                    b.Property<string>("AbilityScores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<string>("SubraceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubraceId");

                    b.HasIndex("BookId");

                    b.HasIndex("RaceId");

                    b.ToTable("Subrace");
                });

            modelBuilder.Entity("dndgenesis.Models.DndClass", b =>
                {
                    b.HasOne("dndgenesis.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("dndgenesis.Models.DndSubclass", b =>
                {
                    b.HasOne("dndgenesis.Models.DndClass", "DndClass")
                        .WithMany()
                        .HasForeignKey("DndClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DndClass");
                });

            modelBuilder.Entity("dndgenesis.Models.Spell", b =>
                {
                    b.HasOne("dndgenesis.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dndgenesis.Models.SchoolMagic", "SchoolMagic")
                        .WithMany()
                        .HasForeignKey("SchoolMagicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("SchoolMagic");
                });

            modelBuilder.Entity("dndgenesis.Models.Subrace", b =>
                {
                    b.HasOne("dndgenesis.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dndgenesis.Models.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Race");
                });
#pragma warning restore 612, 618
        }
    }
}
